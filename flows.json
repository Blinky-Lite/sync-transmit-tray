[
    {
        "id": "3f2da72f.995ab8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5f562f66.a301e",
        "type": "tab",
        "label": "sync-transmit-01",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f07e020c.d4d43",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "188d93e1.8dcc1c",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "1da6518.fb1b7af"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "8857082f.cfdaa8",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6a402d92.12d7c4",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "b1fab3c6.1f34c"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "21ff842d.62f36c",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/rfcomm0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "12",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "44b51478.9c022c",
        "type": "websocket-listener",
        "z": "",
        "path": "/sync-transmit/websocket",
        "wholemsg": "false"
    },
    {
        "id": "144aea5f.fcbd96",
        "type": "JsonWebToken_config",
        "z": "",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "ea743ee6.d8b55",
        "type": "serial in",
        "z": "5f562f66.a301e",
        "name": "",
        "serial": "21ff842d.62f36c",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "d5761f6c.c46e6"
            ]
        ]
    },
    {
        "id": "93049b70.2dc5c8",
        "type": "mqtt out",
        "z": "5f562f66.a301e",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "79250bf3.365cc4",
        "x": 1390,
        "y": 400,
        "wires": []
    },
    {
        "id": "3f988ea4.7ee392",
        "type": "serial out",
        "z": "5f562f66.a301e",
        "name": "",
        "serial": "21ff842d.62f36c",
        "x": 760,
        "y": 460,
        "wires": []
    },
    {
        "id": "8cda9011.eab33",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Subscribe Settings",
        "topic": "+/+/+/setting",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "dc36009e.fdeeb"
            ]
        ]
    },
    {
        "id": "dc36009e.fdeeb",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "6c43015c.a827c"
            ]
        ]
    },
    {
        "id": "5902d0c0.241a6",
        "type": "file",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1050,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f3f3f15.081c31",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "CreateSettings",
        "func": "var device = flow.get('device');\n//node.warn('newSetting = ' + flow.get('newSetting').toString())\n\nvar bufsize = 4 + 60 + 28 + 16 + 16 + 4;\n\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\n\nvar ioffset = 0\nsettingsView.setInt32(ioffset, flow.get('newSetting'), true);\nioffset = ioffset + 4;\nsettingsView.setInt32(ioffset, device.numEvents.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.sigPower.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.statusLedChannel.value, true);\nioffset =  ioffset + 4;\nsettingsView.setFloat32(ioffset, device.rfFreq.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.transAddr.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.modemConfigIndex.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.intervalUs.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime1.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime2.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime3.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime4.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime1.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime2.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime3.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime4.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint8(ioffset, device.channelStateMask1.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask2.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask3.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask4.value);\nioffset =  ioffset + 1;\nfor (var ii = 0; ii < 60; ++ii)\n{\n   settingsView.setUint8(ioffset, device.timeLine.value[1][ii]); \n   ++ioffset;\n}\n\nreturn {topic:'settings',payload:Buffer.from(buffer)};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 460,
        "wires": [
            [
                "3f988ea4.7ee392"
            ]
        ]
    },
    {
        "id": "6eaa13e9.4147bc",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "init 1 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "2635280b.22f548"
            ]
        ]
    },
    {
        "id": "163af492.5e952b",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "53c95857.5f3d68"
            ]
        ]
    },
    {
        "id": "53c95857.5f3d68",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Save initSettings in Memory",
        "func": "flow.set('device', msg.payload);\nflow.set('newSetting', 1);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "d5761f6c.c46e6",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Read Serial Handshake",
        "func": "var ib;\nvar device = flow.get('device');\nvar dataView     = new DataView(new ArrayBuffer(4));\nvar newSettingDone = 0;\nvar cubeInit = 0;\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\ncubeInit = dataView.getInt32(0);\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[1 * 4 + 3 - ib]);\nnewSettingDone = dataView.getInt32(0);\n\nvar newMsg = {topic:'userData', payload:[]};\nfor (var ii = 8; ii < msg.payload.length; ++ii) newMsg.payload[ii - 8] = msg.payload[ii];\n\nif (newSettingDone > 0) \n{\n    flow.set('newSetting', 0);\n}\nif(cubeInit == 1) flow.set('newSetting', 1);\n//node.warn(' ');\n//node.warn('newSettingDone = ' + newSettingDone.toString());\n//node.warn('cubeInit = ' + cubeInit.toString());\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 400,
        "wires": [
            [
                "d6a8ff2a.f4acd",
                "f3f3f15.081c31"
            ]
        ]
    },
    {
        "id": "9e954281.d9215",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nvar filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 140,
        "wires": [
            [
                "5902d0c0.241a6"
            ]
        ]
    },
    {
        "id": "7461da25.d86ac4",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 140,
        "wires": [
            [
                "9e954281.d9215"
            ]
        ]
    },
    {
        "id": "9115ea87.0ca208",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Readings Alarm Scan",
        "func": "msg.payload.linkQuality.value     = global.get('linkQuality');\nmsg.payload.signalLevel.value     = global.get('signalLevel');\nscalarAlarmScan(msg.payload, 'reading');\nflow.set('device', msg.payload); \nmsg.topic = global.get('project') + '/' + flow.get('cubeInfo').deviceType + '/' + flow.get('cubeInfo').name + '/reading';\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 400,
        "wires": [
            [
                "a3ff8e5.b79de7",
                "2e38a8f5.5c9f68"
            ]
        ]
    },
    {
        "id": "6c15c07a.68169",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "sync-transmit-01 Settings In",
        "links": [
            "80a529df.319ae8"
        ],
        "x": 35,
        "y": 200,
        "wires": [
            [
                "8fd42733.128c98"
            ]
        ]
    },
    {
        "id": "a3ff8e5.b79de7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "c4a801b1.1c338"
            ]
        ]
    },
    {
        "id": "107beeed.934ed1",
        "type": "websocket out",
        "z": "5f562f66.a301e",
        "name": "/sync-transmit/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 1410,
        "y": 460,
        "wires": []
    },
    {
        "id": "65c2a6ff.a7b8f8",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "sync-transmit-01 to websocket",
        "links": [
            "59adc6a1.990668"
        ],
        "x": 1215,
        "y": 520,
        "wires": [
            [
                "107beeed.934ed1"
            ]
        ]
    },
    {
        "id": "3ab766b1.558d9a",
        "type": "template",
        "z": "f07e020c.d4d43",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4109bee6.c2294",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "fd2bae7.8730f5"
            ]
        ]
    },
    {
        "id": "ed534f2d.ee021",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"loginDialog\" title=\"Login\" class='card'>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\"><span class=\"tableText\">Password</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control tableText\" id=\"loginPassword\" type=\"password\" value=\"\" /></td>\n                </tr>\n           </table>\n        </div>\n    </div>    \n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "20e2a34a.7be64c"
            ]
        ]
    },
    {
        "id": "91ca4a7b.9010f8",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "ed534f2d.ee021"
            ]
        ]
    },
    {
        "id": "fd2bae7.8730f5",
        "type": "http response",
        "z": "188d93e1.8dcc1c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "85f6e038.56c86",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            ws.send(JSON.stringify(message));\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            loginDialog(\"close\");\n//            userID  = getRandomInt(32768);\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        var jwtToken = '';\n        var loginCallback = null;\n        var loginCallbackInfo = null;\n        function checkLogin(callback, callbackInfo)\n        {\n            if (jwtToken.length > 0) return callback(callbackInfo);\n            loginDialog(\"open\", callback, callbackInfo);\n        }\n        function loadJwtToken(data)\n        {\n            if (data.token == null)\n            {\n                acknowledgeDialog('Error', 'Login', 'Denied');\n            }\n            else\n            {\n                jwtToken = data.token;\n                loginCallback(loginCallbackInfo);\n            }\n        }\n        function loginDialog(action, callback, callbackInfo) \n        {\n            $( \"#loginDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Login\",\n                            click: function() \n                            {\n                                ws.send(JSON.stringify(\n                                {\n                                    topic       : 'getJwtToken',\n                                    payload     : \n                                    {\n//                                        loginUser       : $('#loginUser').val(),\n                                        loginPassword   : $('#loginPassword').val()\n                                    },\n                                    'userID'    : userID,\n                                }));\n                                loginCallback = callback;\n                                loginCallbackInfo = callbackInfo;\n                                $( this ).dialog( \"close\" );\n                            },\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n            $( \"#loginDialog\" ).dialog(action);\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                token       : jwtToken,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "91ca4a7b.9010f8"
            ]
        ]
    },
    {
        "id": "1da6518.fb1b7af",
        "type": "function",
        "z": "188d93e1.8dcc1c",
        "name": "Create userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "85f6e038.56c86"
            ]
        ]
    },
    {
        "id": "20e2a34a.7be64c",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "4109bee6.c2294"
            ]
        ]
    },
    {
        "id": "73f0aea6.1d002",
        "type": "template",
        "z": "8857082f.cfdaa8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1fab3c6.1f34c",
        "type": "subflow:8857082f.cfdaa8",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e205aa81.b2b958"
            ]
        ]
    },
    {
        "id": "133517a3.6ba2b8",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "e205aa81.b2b958",
        "type": "subflow:f07e020c.d4d43",
        "z": "6a402d92.12d7c4",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "133517a3.6ba2b8"
            ]
        ]
    },
    {
        "id": "8f14813b.bcdfc",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1000,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ea57f5c0.b55618",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Restart Tray",
        "topic": "+/+/+/restartTray",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "808c8dcc.1f0ac"
            ]
        ]
    },
    {
        "id": "808c8dcc.1f0ac",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 230,
        "y": 260,
        "wires": [
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "960991fa.0fafe",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check Restart Setting",
        "func": "if (msg.payload != 1) return null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "8f14813b.bcdfc"
            ]
        ]
    },
    {
        "id": "8fd42733.128c98",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter Websocket MQTT like message",
        "func": "var msg1 = null;\nvar msg2 = null\nvar mqttArray = msg.topic.split('/');\nif (mqttArray[3] == 'restartTray')\n{\n    msg2 = msg;\n}\nelse\n{\n    msg1 = msg;\n}\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "6c43015c.a827c"
            ],
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "d6a8ff2a.f4acd",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Create Readings",
        "func": "var ib;\nvar device = flow.get('device');\nvar dataView     = new DataView(new ArrayBuffer(4));\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\nvar extraInfo = dataView.getInt32(0);\n//node.warn(extraInfo);\n\nreturn {topic : 'reading', payload : device};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 400,
        "wires": [
            [
                "9115ea87.0ca208"
            ]
        ]
    },
    {
        "id": "9256d95.2ffee28",
        "type": "comment",
        "z": "5f562f66.a301e",
        "name": "Customization",
        "info": " - Buffer size on Teensy Output\n - rfcomm port\n - code in Create Readings\n - code in Create Settings\n - websocket URL",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "c0eddd92.1b41",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "Init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 90,
        "y": 40,
        "wires": [
            [
                "218e440b.fba8ac"
            ]
        ]
    },
    {
        "id": "218e440b.fba8ac",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Cube Custom Info",
        "func": "var cubeInfo = \n{\n    deviceType  : 'sync-transmit',\n    name        : '01',\n};\nflow.set('cubeInfo', cubeInfo);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "2635280b.22f548",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 340,
        "wires": [
            [
                "163af492.5e952b"
            ]
        ]
    },
    {
        "id": "6c43015c.a827c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "7461da25.d86ac4"
            ]
        ]
    },
    {
        "id": "225946b1.9e8b3a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "960991fa.0fafe"
            ]
        ]
    },
    {
        "id": "d3b167fa.414fa8",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "PROJECT",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "8f82985c.1fa328",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "SETTINGSPASSWORD",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "5497633f.4a758c",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Save global init",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 360,
        "y": 100,
        "wires": []
    },
    {
        "id": "d162777.1380788",
        "type": "exec",
        "z": "3f2da72f.995ab8",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "adf1efae.e4e0f"
            ],
            [],
            []
        ]
    },
    {
        "id": "77ae9cee.d460f4",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 220,
        "wires": [
            [
                "d162777.1380788"
            ]
        ]
    },
    {
        "id": "adf1efae.e4e0f",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality",
        "func": "var info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nvar levelStartIndex = info.indexOf('Signal level=');\nvar linkStopIndex   = info.indexOf('/70');\nvar levelStopIndex   = info.lastIndexOf('dBm');\nvar linkQuality = Number(info.substring(linkStartIndex + 13, linkStopIndex));\nvar signalLevel =  Number(info.substring(levelStartIndex + 13, levelStopIndex - 1));\nvar ssid = info.substring(info.indexOf('ESSID') + 7);\nssid = ssid.substring(0,ssid.indexOf('\"'));\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nglobal.set('linkQuality',linkQuality);\nglobal.set('signalLevel', signalLevel);\nglobal.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c4a801b1.1c338",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "107beeed.934ed1"
            ]
        ]
    },
    {
        "id": "2e38a8f5.5c9f68",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "93049b70.2dc5c8"
            ]
        ]
    },
    {
        "id": "80a529df.319ae8",
        "type": "link out",
        "z": "3f2da72f.995ab8",
        "name": "Settings Out",
        "links": [
            "6c15c07a.68169",
            "e5570491.c3b9a8",
            "faa32816.12ec88"
        ],
        "x": 1115,
        "y": 340,
        "wires": []
    },
    {
        "id": "59adc6a1.990668",
        "type": "link out",
        "z": "3f2da72f.995ab8",
        "name": "Token Check",
        "links": [
            "65c2a6ff.a7b8f8",
            "116b74d6.fa9e6b"
        ],
        "x": 1115,
        "y": 380,
        "wires": []
    },
    {
        "id": "c0f3ba34.357ff8",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Send Token",
        "func": "return {topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.userID, token: msg.token}};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 420,
        "wires": [
            [
                "59adc6a1.990668"
            ]
        ]
    },
    {
        "id": "5b7e2784.e4b0e8",
        "type": "JsonWebToken",
        "z": "3f2da72f.995ab8",
        "name": "get Token",
        "tokenconfig": "144aea5f.fcbd96",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "c0f3ba34.357ff8"
            ]
        ]
    },
    {
        "id": "bcbe321.809a9d",
        "type": "JsonWebToken",
        "z": "3f2da72f.995ab8",
        "name": "decrypt Token",
        "tokenconfig": "144aea5f.fcbd96",
        "x": 820,
        "y": 340,
        "wires": [
            [
                "e2764b65.a4d8e8"
            ]
        ]
    },
    {
        "id": "e2764b65.a4d8e8",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Check Token",
        "func": "if (Number(msg.token) == msg.userID)\n{\n    return [msg, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Success!', userID : msg.userID}}]\n}\nreturn [null, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Bad token', userID : msg.userID}}];",
        "outputs": 2,
        "noerr": 0,
        "x": 990,
        "y": 340,
        "wires": [
            [
                "80a529df.319ae8"
            ],
            [
                "59adc6a1.990668"
            ]
        ]
    },
    {
        "id": "e65a9d0.a28526",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "bcbe321.809a9d"
            ]
        ]
    },
    {
        "id": "568adb75.dc14c4",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "CheckLogin",
        "func": "if (global.get('settingsPassword') == 'NULL')\n{\n    return [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];    \n}\nif (msg.payload.payload.loginPassword != global.get('settingsPassword'))\n{\n    return [{topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.payload.userID, token: null}}, null];\n}\nreturn [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];",
        "outputs": 2,
        "noerr": 0,
        "x": 610,
        "y": 400,
        "wires": [
            [
                "59adc6a1.990668"
            ],
            [
                "5b7e2784.e4b0e8"
            ]
        ]
    },
    {
        "id": "cec1492c.8d6e98",
        "type": "switch",
        "z": "3f2da72f.995ab8",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJwtToken",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "e65a9d0.a28526"
            ],
            [
                "568adb75.dc14c4"
            ]
        ]
    },
    {
        "id": "dbecbc87.72d8d",
        "type": "json",
        "z": "3f2da72f.995ab8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "cec1492c.8d6e98"
            ]
        ]
    },
    {
        "id": "a44c5f63.1ef47",
        "type": "websocket in",
        "z": "3f2da72f.995ab8",
        "name": "/sync-transmit/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "dbecbc87.72d8d"
            ]
        ]
    },
    {
        "id": "b552ad49.01add",
        "type": "http in",
        "z": "5f562f66.a301e",
        "name": "/sync-transmit",
        "url": "/sync-transmit",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "9bcacf6d.ee3ff"
            ]
        ]
    },
    {
        "id": "9bcacf6d.ee3ff",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'sync-transmit';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 600,
        "wires": [
            [
                "277f4cb3.d2ff84"
            ]
        ]
    },
    {
        "id": "11cdfa7f.995066",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Sync-Transmit {{{payload.script.name}}}",
        "output": "str",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "2ed83759.f63fe8"
            ]
        ]
    },
    {
        "id": "93870033.6d594",
        "type": "subflow:6a402d92.12d7c4",
        "z": "5f562f66.a301e",
        "name": "",
        "x": 1130,
        "y": 760,
        "wires": []
    },
    {
        "id": "2ed83759.f63fe8",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var MAXNUMEVENTS = 60;\n        var editingTimeline = false;\n        var editingChannel = false;\n        var numEvents = 1;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            createEventTable();\n            enableTimelineEditor(false);\n            enableChannelEditor(false);\n\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n//            console.log(msg);\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getArchiveValues':\n                    if (msg.userID == userID)\n                    {\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function createEventTable()\n        {\n            var rowHtml = '<tr><td><span class=\"card-text\" style=\"font-size: 150%;\">Bit</span></td>';\n            for (var ie = 0; ie < MAXNUMEVENTS; ++ie) \n            {\n                if (ie < 10)\n                {\n                    rowHtml = rowHtml + '<td><span class=\"card-text\" style=\"font-size: 150%;\">' + '0' + ie.toString() + '</span></td>';\n                }\n                else\n                {\n                    rowHtml = rowHtml + '<td><span class=\"card-text\" style=\"font-size: 150%;\">' + ie.toString() + '</span></td>';\n                }\n            }\n            rowHtml = rowHtml + '</tr>';\n            $('#eventTable').append(rowHtml);\n            for (var ib = 0; ib < 8; ++ib)\n            {\n                rowHtml = '<tr><td><span class=\"card-text\" style=\"font-size: 150%;\">'+ ib.toString() + '</span></td>';\n                for (var ie = 0; ie < MAXNUMEVENTS; ++ie) \n                    rowHtml = rowHtml + '<td><input type=\"checkbox\" class=\"inputLarger\" id=\"' + 'b' + ib.toString() + 'e' + ie.toString() + '\"></td>';\n                rowHtml = rowHtml + '</tr>';\n                $('#eventTable').append(rowHtml);\n            }\n\n            for (var ie = numEvents; ie < MAXNUMEVENTS; ++ie) hideEvent(ie,true);\n        }\n        function hideEvent(ievent, hide)\n        {\n            var header = '#eventTable tr > *:nth-child(' + (ievent + 2).toString() + ')';\n            if (hide)  $(header).hide();\n            if (!hide) $(header).show();\n        }\n        function enableTimelineEditor(enable)\n        {\n            for (var ib = 0; ib <= 8; ++ib)\n            {\n                for (var ie = 0; ie < MAXNUMEVENTS; ++ie)\n                {\n                    var checkBoxId = '#b' + ib.toString() + 'e' + ie.toString();\n                    $(checkBoxId).prop(\"disabled\", !enable);\n                }\n            }\n            $('#intervalUs').prop(\"disabled\", !enable);\n            $('#sigPower').prop(\"disabled\", !enable);\n            $('#rfFreq').prop(\"disabled\", !enable);\n            $('#transAddr').prop(\"disabled\", !enable);\n            $('#modemConfigIndex').prop(\"disabled\", !enable);\n            if ( enable)\n            {\n                $('#addEventRow').show();\n                $('#editTimelineButton').text('Stop Editing');\n            }\n            else\n            {\n                $('#addEventRow').hide();\n                $('#editTimelineButton').text('Edit');\n            }\n\n        }\n        function enableChannelEditor(enable)\n        {\n            for (var ib = 0; ib <= 8; ++ib)\n            {\n                for (var ic = 0; ic < 4; ++ic)\n                {\n                    var checkBoxId = '#b' + ib.toString() + 'c' + ic.toString();\n                    $(checkBoxId).prop(\"disabled\", !enable);\n                }\n            }\n            $('#c0Start').prop(\"disabled\", !enable);\n            $('#c1Start').prop(\"disabled\", !enable);\n            $('#c2Start').prop(\"disabled\", !enable);\n            $('#c3Start').prop(\"disabled\", !enable);\n            $('#c0Stop').prop(\"disabled\", !enable);\n            $('#c1Stop').prop(\"disabled\", !enable);\n            $('#c2Stop').prop(\"disabled\", !enable);\n            $('#c3Stop').prop(\"disabled\", !enable);\n            $('#c0StatusLed').prop(\"disabled\", !enable);\n            $('#c1StatusLed').prop(\"disabled\", !enable);\n            $('#c2StatusLed').prop(\"disabled\", !enable);\n            $('#c3StatusLed').prop(\"disabled\", !enable);\n            if ( enable)\n            {\n                $('#editChannelButton').text('Stop Editing');\n            }\n            else\n            {\n                $('#editChannelButton').text('Edit');\n            }\n        }\n        function editTimeline()\n        {\n            editingTimeline = !editingTimeline;\n            enableTimelineEditor(editingTimeline);\n\n            if (!editingTimeline)\n            {\n                var pow2 = [1,2,4,8,16,32,64,128];\n                for (var ie = 0; ie < MAXNUMEVENTS; ++ie)\n                {\n                    device.timeLine.value[1][ie] = 0;\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'e' + ie.toString();\n                        if ($(checkBoxId).prop(\"checked\")) \n                        {\n                            device.timeLine.value[1][ie] = device.timeLine.value[1][ie] + pow2[ib];\n                        }\n                    }\n                }\n                device.numEvents.value = numEvents;\n                if (!isNaN(Number($('#intervalUs').val())))\n                {\n                    device.intervalUs.value = Number($('#intervalUs').val());\n                }\n                if (!isNaN(Number($('#sigPower').val())))\n                {\n                    device.sigPower.value = Number($('#sigPower').val());\n                }\n                if (!isNaN(Number($('#rfFreq').val())))\n                {\n                    device.rfFreq.value = Number($('#rfFreq').val());\n                }\n                if (!isNaN(Number($('#transAddr').val())))\n                {\n                    device.transAddr.value = Number($('#transAddr').val());\n                }\n                device.modemConfigIndex.value = Number($('#modemConfigIndex').val());\n\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                checkLogin(sendSettingToMqtt, mqttMessage);\n            }\n        }\n        function editChannelConfig()\n        {\n            editingChannel = !editingChannel;\n            enableChannelEditor(editingChannel);\n            if (!editingChannel)\n            {\n                var pow2 = [1,2,4,8,16,32,64,128];\n                for (var ic = 0; ic < 4; ++ic)\n                {\n                    var startId = '#c' + ic.toString() + 'Start';\n                    var stopId = '#c' + ic.toString() + 'Stop';\n                    var startDeviceAtt = 'channelBeginTime' + (ic + 1).toString();\n                    var stopDeviceAtt =  'channelEndTime'   + (ic + 1).toString();\n                    var maskAtt = 'channelStateMask' + (ic + 1).toString();\n\n                    device[maskAtt].value = 0;\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'c' + ic.toString();\n                        if ($(checkBoxId).prop(\"checked\")) \n                        {\n                            device[maskAtt].value = device[maskAtt].value + pow2[ib];\n                        }\n                    }\n                    if (!isNaN(Number($(startId).val()))) device[startDeviceAtt].value = Number($(startId).val());\n                    if (!isNaN(Number($(stopId).val() ))) device[stopDeviceAtt].value  = Number($(stopId).val());\n                    var statusLedButtonId = '#c' + ic.toString() + 'StatusLed';\n                    if ($(statusLedButtonId).prop(\"checked\")) device.statusLedChannel.value = ic;\n                }\n\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                checkLogin(sendSettingToMqtt, mqttMessage);\n            }\n        }\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!editingTimeline)\n            {\n                numEvents = device.numEvents.value;\n                $('#intervalUs').val(device.intervalUs.value);\n                $('#numberOfEvents').text(numEvents);\n                $('#sigPower').val(device.sigPower.value);\n                $('#rfFreq').val(device.rfFreq.value);\n                $('#transAddr').val(device.transAddr.value);\n                $('#modemConfigIndex').val(device.modemConfigIndex.value.toString());\n\n                for (var ie = numEvents; ie < MAXNUMEVENTS; ++ie) hideEvent(ie,true);\n                for (var ie = 0; ie < numEvents; ++ie)\n                {\n                    hideEvent(ie, false);\n                    var bits = getBits(device.timeLine.value[1][ie]);\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'e' + ie.toString();\n                        var checked = false;\n                        if (bits[ib] == 1) checked = true;\n                        $(checkBoxId).prop(\"checked\", checked);\n                    }\n                }\n            }\n            if(!editingChannel)\n            {\n                for (var ic = 0; ic < 4; ++ic)\n                {\n                    var startId = '#c' + ic.toString() + 'Start';\n                    var stopId = '#c' + ic.toString() + 'Stop';\n                    var startDeviceAtt = 'channelBeginTime' + (ic + 1).toString();\n                    var stopDeviceAtt =  'channelEndTime'   + (ic + 1).toString();\n                    var maskAtt = 'channelStateMask' + (ic + 1).toString();\n                    $(startId).val(device[startDeviceAtt].value);\n                    $(stopId).val(device[stopDeviceAtt].value);\n                    var bits = getBits(device[maskAtt].value);\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'c' + ic.toString();\n                        var checked = false;\n                        if (bits[ib] == 1) checked = true;\n                        $(checkBoxId).prop(\"checked\", checked);\n                    }\n                    var statusLedButtonId = '#c' + ic.toString() + 'StatusLed';\n                    if (device.statusLedChannel.value == ic)\n                    {\n                        $(statusLedButtonId).prop(\"checked\", true);\n                    }\n                    else\n                    {\n                        $(statusLedButtonId).prop(\"checked\", false);\n                    }\n                }\n            }\n        }\n        function getBits(bytey)\n        {\n            var testByte = bytey;\n            var check = [0,0,0,0,0,0,0,0];\n            for (var ib = 0; ib < 8; ++ib)\n            {\n                check[ib] = testByte & 1;\n                testByte = testByte >> 1;\n            }\n            return check;\n        }\n        function addEvent(add)\n        {\n            if (add > 0)\n            {\n                if (numEvents < MAXNUMEVENTS)\n                {\n                    numEvents = numEvents + 1; \n                    hideEvent(numEvents - 1,false);\n                    $('#numberOfEvents').text(numEvents);\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'e' + (numEvents - 1).toString();\n                        $(checkBoxId).prop(\"checked\", false);\n                    }\n                }\n            }\n            else\n            {\n                if (numEvents > 1)\n                {\n                    numEvents = numEvents - 1; \n                    hideEvent(numEvents,true);\n                    $('#numberOfEvents').text(numEvents);\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'e' + numEvents.toString();\n                        $(checkBoxId).prop(\"checked\", false);\n                    }\n                }\n            }\n            \n        }\n",
        "output": "str",
        "x": 650,
        "y": 600,
        "wires": [
            [
                "3e698fbc.ebd62"
            ]
        ]
    },
    {
        "id": "f250e09e.2cc1c",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "c7609f6c.a0cf1"
            ]
        ]
    },
    {
        "id": "5648cf16.2aa48",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.timeline}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.channelConfig}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.dangerZone}}}\n            </div>\n        </div>\n    </div>\n    ",
        "output": "str",
        "x": 950,
        "y": 760,
        "wires": [
            [
                "93870033.6d594"
            ]
        ]
    },
    {
        "id": "271c7f06.e0e8a",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 680,
        "wires": [
            [
                "406bc373.84f28c"
            ]
        ]
    },
    {
        "id": "c7609f6c.a0cf1",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "html.timeline",
        "field": "payload.html.timeline",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <table class='card-title' width='100%'>\n                        <tr>\n                            <td width='20%' >\n                            </td>\n                            <td width='60%' align='center'>\n                                <span >Timeline</span>\n                            </td>\n                            <td width='20%'>\n                                <button class='btn btn-block card-button' style='font-size: 50%;' id='editTimelineButton' onclick=\"editTimeline()\" >Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;' id='addEventRow'>\n                            <table width=\"100%\">\n                                <tr>\n                                    <td width=\"40%\">\n                                        <span class='card-text' >Number of Events</span>\n                                    </td>\n                                    <td width=\"20%\">\n                                        <button class='btn btn-block card-button' style='font-size: 200%;'  onclick=\"addEvent(-1)\" >-</button>\n                                    </td>\n                                     <td width=\"20%\" align='center'>\n                                        <span class='card-text' id='numberOfEvents'>1</span>\n                                    </td>\n                                    <td width=\"20%\">\n                                        <button class='btn btn-block card-button' style='font-size: 200%;' onclick=\"addEvent(1)\" >+</button>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table id=\"eventTable\" width=\"100%\">\n                            </table>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table id=\"eventTableProps\" width=\"100%\">\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Interval (uS)</span>\n                                    </td>\n                                    <td>\n                                        <input id=\"intervalUs\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Transmitter Power (dBm)</span>\n                                    </td>\n                                    <td>\n                                        <input id=\"sigPower\" type=\"text\" value=\"-100\" class=\"big-text\"  size=\"8\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >RF Frequency (MHz)</span>\n                                    </td>\n                                    <td>\n                                        <input id=\"rfFreq\" type=\"text\" value=\"-100\" class=\"big-text\"  size=\"8\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Transmitter Address</span>\n                                    </td>\n                                    <td>\n                                        <input id=\"transAddr\" type=\"text\" value=\"-100\" class=\"big-text\"  size=\"8\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Modem Config</span>\n                                    </td>\n                                    <td>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"modemConfigIndex\">\n                                          <option value=\"0\">Bw125Cr45Sf128</option>\n                                          <option value=\"1\">Bw500Cr45Sf128</option>\n                                          <option value=\"2\">Bw31_25Cr48Sf512</option>\n                                          <option value=\"3\">Bw125Cr48Sf4096</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 600,
        "wires": [
            [
                "d870957e.efe1d8"
            ]
        ]
    },
    {
        "id": "3e698fbc.ebd62",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "script.dangerZone",
        "field": "payload.script.dangerZone",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dangerZone JavaScript\n        function restartTray()\n        {\n            optionDialog('Danger! Will Robinson, Danger!', 'Restart Tray', 'This should not be done lightly', ['Reset Tray','Cancel'], [function (){restartTrayButtonPress();}, function (){$( \"#optionDialog\" ).dialog( \"close\" );}]);\n        }\n        function restartTrayButtonPress()\n        {\n            $( \"#optionDialog\" ).dialog( \"close\" );\n            var mqttMessage = \n            {\n                topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/restartTray',\n                payload :  1\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n",
        "output": "str",
        "x": 670,
        "y": 640,
        "wires": [
            [
                "f250e09e.2cc1c"
            ]
        ]
    },
    {
        "id": "406bc373.84f28c",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "html.dangerZone",
        "field": "payload.html.dangerZone",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='danger-card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='danger-card-title'>Danger Zone</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='danger-card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='100%' align=\"center\">\n                                        <button class='btn danger-card-button big-text' id=\"restartTrayButton\" onclick=\"restartTray()\" >Restart Tray</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 720,
        "wires": [
            [
                "5648cf16.2aa48"
            ]
        ]
    },
    {
        "id": "277f4cb3.d2ff84",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "metronomeYellow.png",
        "output": "str",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "11cdfa7f.995066"
            ]
        ]
    },
    {
        "id": "d870957e.efe1d8",
        "type": "template",
        "z": "5f562f66.a301e",
        "name": "html.channelConfig",
        "field": "payload.html.channelConfig",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- channelConfig HTML -->\n                <div class='card'>\n                    <table class='card-title' width='100%'>\n                        <tr>\n                            <td width='20%' >\n                            </td>\n                            <td width='60%' align='center'>\n                                <span >Channel Configuration</span>\n                            </td>\n                            <td width='20%'>\n                                <button class='btn btn-block card-button' style='font-size: 50%;' id='editChannelButton' onclick=\"editChannelConfig()\" >Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width=\"100%\">\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">Bit</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">1</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">2</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">3</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">4</span></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">0</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">1</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">2</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">3</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">4</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">5</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">6</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">7</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\">Start (uS)</span></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c0Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c1Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c2Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c3Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\">Stop (uS)</span></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c0Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c1Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c2Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c3Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                </tr>\n                                 <tr>\n                                    <td width=\"20%\"><span class=\"card-text\">Status LED</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c0StatusLed\" name=\"statusLed\" value=\"0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c1StatusLed\" name=\"statusLed\" value=\"1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c2StatusLed\" name=\"statusLed\" value=\"2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c3StatusLed\"  name=\"statusLed\" value=\"3\"></td>\n                                </tr>\n                           </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 640,
        "wires": [
            [
                "271c7f06.e0e8a"
            ]
        ]
    },
    {
        "id": "af68cced.56a86",
        "type": "http in",
        "z": "3f2da72f.995ab8",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "ceb117b.728cbe8"
            ]
        ]
    },
    {
        "id": "882dbc4e.34065",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/sync-transmit?name=01\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/metronomeYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Sync-Transmit 01</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 750,
        "y": 500,
        "wires": [
            [
                "11ffc407.64bccc"
            ]
        ]
    },
    {
        "id": "39f94e3e.3e60e2",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Synchronicity",
        "output": "str",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "1e2f8257.5d5fae"
            ]
        ]
    },
    {
        "id": "ceb117b.728cbe8",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "39f94e3e.3e60e2"
            ]
        ]
    },
    {
        "id": "1e2f8257.5d5fae",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "metronomeYellow.png",
        "output": "str",
        "x": 610,
        "y": 500,
        "wires": [
            [
                "882dbc4e.34065"
            ]
        ]
    },
    {
        "id": "11ffc407.64bccc",
        "type": "subflow:6a402d92.12d7c4",
        "z": "3f2da72f.995ab8",
        "name": "",
        "x": 910,
        "y": 500,
        "wires": []
    }
]